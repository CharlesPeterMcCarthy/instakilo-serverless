service:
  name: instagram-serverless

plugins:
  - serverless-webpack

provider:
  name: aws
  region: eu-west-1
  stage: dev
  runtime: nodejs10.x
  tags:
    project: instagram

  iamRoleStatements:
    - Effect: Allow
      Action:
        - "dynamodb:Query"
        - "dynamodb:Scan"
        - "dynamodb:PutItem"
        - "dynamodb:GetItem"
        - "dynamodb:DeleteItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:Scan"
      Resource: "*"

functions:
  signUpChecksHandler:
    handler: src/functions/signup/signup.signUpChecksHandler
  signUpHandler:
    handler: src/functions/signup/signup.signUpHandler
  confirmSignUpHandler:
    handler: src/functions/confirm-signup/confirm-signup.confirmSignUpHandler
  loginHandler:
    handler: src/functions/login/login.loginHandler
  storeLoginTokensHandler:
    handler: src/functions/tokens/tokens.storeLoginTokensHandler
    events:
      - http:
          path: /store-login-tokens
          method: post
          cors: true

  createPostHandler:
    handler: src/functions/posts/posts.createPostHandler
    events:
      - http:
          path: /create-post
          method: post
          cors: true
  updatePostHandler:
    handler: src/functions/posts/posts.updatePostHandler
    events:
      - http:
          path: /update-post
          method: post
          cors: true
  deletePostHandler:
    handler: src/functions/posts/posts.deletePostHandler
    events:
      - http:
          path: /delete-post
          method: post
          cors: true
  queryPublicPostsHandler:
    handler: src/functions/posts/posts.queryPublicPostsHandler
    events:
      - http:
          path: /get-public-posts
          method: post
          cors: true
  queryOwnPostsHandler:
    handler: src/functions/posts/posts.queryOwnPostsHandler
    events:
      - http:
          path: /get-own-posts
          method: post
          cors: true
  querySinglePostHandler:
    handler: src/functions/posts/posts.querySinglePostHandler
    events:
      - http:
          path: /get-post
          method: post
          cors: true

  addCommentHandler:
    handler: src/functions/posts/comments/comments.addCommentHandler
    events:
      - http:
          path: /add-comment
          method: post
          cors: true
  deleteCommentHandler:
    handler: src/functions/posts/comments/comments.deleteCommentHandler
    events:
      - http:
          path: /delete-comment
          method: post
          cors: true

resources:
  Resources:
    UserTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: "_id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "_id"
            KeyType: "HASH"
        BillingMode: PAY_PER_REQUEST
        TableName: INS-USERS
    PostTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: "_id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "_id"
            KeyType: "HASH"
        BillingMode: PAY_PER_REQUEST
        TableName: INS-POSTS
    HashTagTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: "_tag"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "_tag"
            KeyType: "HASH"
        BillingMode: PAY_PER_REQUEST
        TableName: INS-HASHTAGS
    LocationTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: "_placeId"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "_placeId"
            KeyType: "HASH"
        BillingMode: PAY_PER_REQUEST
        TableName: INS-LOCATIONS
